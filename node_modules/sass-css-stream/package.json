{
  "name": "sass-css-stream",
  "version": "0.1.4",
  "description": "sass to css transform",
  "main": "index.js",
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/rotundasoftware/sass-css-stream.git"
  },
  "keywords": [
    "cartero",
    "parcelify",
    "sass",
    "css"
  ],
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/rotundasoftware/sass-css-stream/issues"
  },
  "homepage": "https://github.com/rotundasoftware/sass-css-stream",
  "dependencies": {
    "node-sass": "^2.1.1",
    "through": "^2.3.7"
  },
  "readme": "sass-css-stream\n===============\n\nA sass to css stream wrapper around [node-sass](https://github.com/andrew/node-sass).\n\nTakes a file argument and an optional opts argument that is passed through to node-sass. Returns a [through stream](https://github.com/dominictarr/through) that has sass contents written in and outputs the compiled css.\n\nCan be as a [parcelify](https://github.com/rotundasoftware/parcelify) or [cartero](https://github.com/rotundasoftware/cartero) transform.\n\n#example\n```javascript\nvar sassCssStream = require( '../' );\nvar fs = require( 'fs' );\nvar path = require( 'path' );\n\nvar inputFile = path.join( __dirname, \"sampleStyle.scss\" );\n\nvar opts = { includePaths : [ path.resolve( __dirname, 'bourbon' ) ] };\n\nfs.createReadStream( inputFile ).pipe( sassCssStream( inputFile, opts ) ).pipe( process.stdout );\n```\n\n#usage\n\n### sassCssStream( file [, opts ] )\n\n`file` - the sass file to transform\n\n`opts` - optional options hash passed through to `node-sass.renderSync`\n",
  "readmeFilename": "README.md",
  "gitHead": "e76d0925b5ee74d47a3c4f39199c426d6e744098",
  "_id": "sass-css-stream@0.1.4",
  "_shasum": "a94d6a49b9de7340312cc87cbfca4ff3cdaae1ae",
  "_from": "sass-css-stream@>=0.1.1 <0.2.0"
}
